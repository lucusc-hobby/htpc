version: '3'

services:
  traefik:
    image: traefik:latest
    hostname: traefik
    container_name: traefik
    command:
      - '--docker.domain=${DOMAIN}'
      - '--logLevel=${TRAEFIK_LOG_LEVEL}'
    networks:
      - traefik_proxy
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)'
      - 'traefik.http.services.traefik.loadbalancer.server.port=8080'
      - 'traefik.docker.network=traefik_proxy'
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    hostname: prometheus
    container_name: prometheus
    volumes:
      - './prometheus/prometheus.yml:/etc/prometheus/prometheus.yml'
    networks:
      - traefik_proxy
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.prometheus.rule=Host(`prometheus.${DOMAIN}`)'
      - 'traefik.http.services.prometheus.loadbalancer.server.port=9090'
      - 'traefik.docker.network=traefik_proxy'
    restart: unless-stopped

  prom_node_exporter:
    image: prom/node-exporter
    hostname: prom-node-exporter
    container_name: prom-node-exporter
    networks:
      - traefik_proxy
    labels:
      - 'traefik.enable=false'
    restart: unless-stopped

  cadvisor:
    image: google/cadvisor:latest
    hostname: cadvisor
    container_name: cadvisor
    networks:
      - traefik_proxy
    volumes:
      - '/var/run:/var/run:rw'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'
    labels:
      - 'traefik.enable=false'
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    hostname: grafana
    container_name: grafana
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    networks:
      - traefik_proxy
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN}`)'
      - 'traefik.http.services.grafana.loadbalancer.server.port=3000'
      - 'traefik.docker.network=traefik_proxy'
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce
    hostname: portainer
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - traefik_proxy
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN}`)'
      - 'traefik.http.services.portainer.loadbalancer.server.port=9000'
      - 'traefik.docker.network=traefik_proxy'
    restart: unless-stopped

  watchtower:
      container_name: watchtower
      restart: always
      image: containrrr/watchtower
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      command: --schedule "0 0 23 * * MON" --cleanup
volumes:
  grafana_data:
    driver: local
  portainer_data:
    driver: local

networks:
  traefik_proxy:
    external: true
