version: '3'

services:
  plex:
    image: plexinc/pms-docker
    container_name: plex
    volumes:
      - "${CONFIG_VOLUME}/plex:/config"
      - "${MEDIA_VOLUME}/tv:/data/tv"
      - "${MEDIA_VOLUME}/movies:/data/movies"
      - "${PLEX_TRANSCODE}:/transcode"
    network_mode: host
    environment:
      PLEX_CLAIM: claim-${PLEX_CLAIM}
      ADVERTISE_IP: http://${SERVERIP}:32400/
      HOTNAME: ${HOSTNAME}
      PLEX_UID: ${UID}
      PLEX_GUID: ${GUID}      
      TZ: ${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=plex"
      - "traefik.frontend.rule=Host:plex.${DOMAINNAME}"
      - "traefik.port=32400"
      - "traefik.protocol=http"
      - "traefik.docker.network=traefik_proxy"
    restart: unless-stopped

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    volumes:
      - "${CONFIG_VOLUME}/jellyfin:/config"
      - "${MEDIA_VOLUME}/:/media"
    ports:
      - ${JELLYFIN_PORT}:8096
    environment:
      PUID: ${UID}
      PGID: ${GUID}
      TZ: ${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=jellyfin"
      - "traefik.frontend.rule=Host:jellyfin.${DOMAINNAME}"
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_proxy"
    networks:
      - traefik_proxy
    restart: unless-stopped


  sabnzbd:
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    volumes:
      - "${CONFIG_VOLUME}/sabnzbd:/config"
      - '${DOWNLOAD_VOLUME}/complete:/downloads'
      - '${DOWNLOAD_VOLUME}/incomplete:/incomplete-downloads'
    ports:
      - ${SABNZBD_PORT}:8080
      - 9090:9090
    environment:
      PUID: ${UID}
      PGID: ${GUID}
      TZ: ${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=sabnzbd"
      - "traefik.frontend.rule=Host:sabnzbd.${DOMAINNAME}"
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_proxy"
    networks:
      - traefik_proxy
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    depends_on:
      - sabnzbd
      - hydra2    
    volumes:
      - "${CONFIG_VOLUME}/radarr:/config"
      - "${DOWNLOAD_VOLUME}/complete:/downloads"
      - "${MEDIA_VOLUME}/movies:/movies"
    ports:
      - ${RADARR_PORT}:7878
    environment:
      PUID: ${UID}
      PGID: ${GUID}
      TZ: ${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=radarr"
      - "traefik.frontend.rule=Host:radarr.${DOMAINNAME}"      
      - "traefik.port=7878"
      - "traefik.docker.network=traefik_proxy"
    networks:
      - traefik_proxy
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr:preview
    container_name: sonarr
    depends_on:
      - sabnzbd
      - hydra2
    volumes:
      - "${CONFIG_VOLUME}/sonarr:/config"
      - "${DOWNLOAD_VOLUME}/complete:/downloads"
      - "${MEDIA_VOLUME}/tv:/tv"
    ports:
      - ${SONARR_PORT}:8989
    environment:
      PUID: ${UID}
      PGID: ${GUID}
      TZ: ${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=sonarr"
      - "traefik.frontend.rule=Host:sonarr.${DOMAINNAME}"
      - "traefik.port=8989"
      - "traefik.docker.network=traefik_proxy"
    networks:
      - traefik_proxy
    restart: unless-stopped

  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    depends_on:
      - sabnzbd
      - hydra2
    volumes:
      - "${CONFIG_VOLUME}/lidarr:/config"
      - "${DOWNLOAD_VOLUME}/complete:/downloads"
      - "${MEDIA_VOLUME}/tv:/tv"
    ports:
      - ${LIDARR_PORT}:8686      
    environment:
      PUID: ${UID}
      PGID: ${GUID}
      TZ: ${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=lidarr"
      - "traefik.frontend.rule=Host:lidarr.${DOMAINNAME}"
      - "traefik.port=8989"
      - "traefik.docker.network=traefik_proxy"
    networks:
      - traefik_proxy
    restart: unless-stopped

  lazylibrarian:
    image: linuxserver/lazylibrarian
    container_name: lazylibrarian
    depends_on:
      - sabnzbd
      - hydra2   
    volumes: 
      - "${CONFIG_VOLUME}/lazylibrarian/config:/config"
      - "${DOWNLOAD_VOLUME}/complete:/downloads"
      - "${MEDIA_VOLUME}/books:/books"
    ports:
      - ${LAZYLIBRARIAN_PORT}:5299      
    environment: 
      PUID: ${UID}
      PGID: ${GUID}
      TZ: ${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=lazylibrarian"
      - "traefik.frontend.rule=Host:librarian.${DOMAINNAME}"
      - "traefik.port=5299"
      - "traefik.docker.network=traefik_proxy"
    networks:
      - traefik_proxy
    restart: unless-stopped

  rutorrent:
    image: linuxserver/rutorrent
    container_name: rutorrent
    volumes:
      - "${CONFIG_VOLUME}/rtorrent:/config"
      - "${DOWNLOAD_VOLUME}:/downloads"
    ports:
      - ${RUTORRENT_PORT}:80
      - 5000:5000
      - 51413:51413
      - 6881:6881/udp
    environment:
      PUID: ${UID}
      PGID: ${GUID}
    networks:
      - traefik_proxy
    restart: unless-stopped

  hydra2:
    image: linuxserver/hydra2
    container_name: hydra2
    volumes:
      - "${CONFIG_VOLUME}/hydra2:/config"
      - "${DOWNLOAD_VOLUME}:/downloads"
    ports:
      - ${HYDRA2_PORT}:5076
    environment:
      PUID: ${UID}
      PGID: ${GUID}
      TZ: ${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=hydra2"
      - "traefik.frontend.rule=Host:hydra2.${DOMAINNAME}"
      - "traefik.port=5076"
      - "traefik.docker.network=traefik_proxy"
    environment:
      PUID: ${UID}
      PGID: ${GUID}
      TZ: ${TZ}
    networks:
      - traefik_proxy
    restart: unless-stopped

  jackett:
    image: linuxserver/jackett
    container_name: jackett
    volumes:
      - "${CONFIG_VOLUME}/jackett:/config"
      - "${DOWNLOAD_VOLUME}:/downloads"
    ports:
      - ${JACKETT_PORT}:9117
    environment:
      PUID: ${UID}
      PGID: ${GUID}
      TZ: ${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=jackett"
      - "traefik.frontend.rule=Host:jackett.${DOMAINNAME}"
      - "traefik.port=9117"
      - "traefik.docker.network=traefik_proxy"
    networks:
      - traefik_proxy
    restart: unless-stopped  


  tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    depends_on:
      - plex    
    volumes: 
      - ${CONFIG_VOLUME}/tautulli/config:/config
      - ${CONFIG_VOLUME}/tautulli/logs:/logs:ro
    ports:
      - ${TAUTULLI_PORT}:8181      
    environment: 
      PUID: ${UID}
      PGID: ${GUID}
      TZ: ${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=tautulli"
      - "traefik.frontend.rule=Host:tautulli.${DOMAINNAME}"
      - "traefik.port=8181"
      - "traefik.docker.network=traefik_proxy"
    networks:
      - traefik_proxy
    restart: unless-stopped

networks:
    traefik_proxy:
      external: true
