version: '3'

services:
  plex:
    image: plexinc/pms-docker
    container_name: plex
    volumes:
      - "${CONFIG_VOLUME}/plex:/config"
      - "${MEDIA_VOLUME}/tv:/data/tv"
      - "${MEDIA_VOLUME}/movies:/data/movies"
      - "${PLEX_TRANSCODE}:/transcode"
    network_mode: host
    environment:
      PLEX_CLAIM: claim-${PLEX_CLAIM}
      ADVERTISE_IP: http://${SERVERIP}:32400/
      HOTNAME: ${HOSTNAME}
      PLEX_UID: ${UID}
      PLEX_GUID: ${GUID}      
      TZ: ${TZ}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.plex.rule=Host(`plex.${DOMAIN}`)'
      - 'traefik.http.services.plex.loadbalancer.server.port=32400'
      - 'traefik.docker.network=traefik_proxy'
    restart: unless-stopped

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    volumes:
      - "${CONFIG_VOLUME}/jellyfin:/config"
      - "${MEDIA_VOLUME}/:/media"
    ports:
      - ${JELLYFIN_PORT}:8096
    environment:
      PUID: ${UID}
      PGID: ${GUID}
      TZ: ${TZ}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.jellyfin.rule=Host(`jellyfin.${DOMAIN}`)'
      - 'traefik.http.services.jellyfin.loadbalancer.server.port=8096'
      - 'traefik.docker.network=traefik_proxy'
    networks:
      - traefik_proxy
    restart: unless-stopped


  sabnzbd:
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    volumes:
      - "${CONFIG_VOLUME}/sabnzbd:/config"
      - '${DOWNLOAD_VOLUME}/complete:/downloads'
      - '${DOWNLOAD_VOLUME}/incomplete:/incomplete-downloads'
    ports:
      - ${SABNZBD_PORT}:8080
      - 9090:9090
    environment:
      PUID: ${UID}
      PGID: ${GUID}
      TZ: ${TZ}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.sabnzbd.rule=Host(`sabnzbd.${DOMAIN}`)'
      - 'traefik.http.services.sabnzbd.loadbalancer.server.port=8080'
      - 'traefik.docker.network=traefik_proxy'
    networks:
      - traefik_proxy
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr:nightly
    container_name: radarr
    depends_on:
      - sabnzbd
      - hydra2    
    volumes:
      - "${CONFIG_VOLUME}/radarr:/config"
      - "${DOWNLOAD_VOLUME}/complete:/downloads"
      - "${MEDIA_VOLUME}/movies:/movies"
    ports:
      - ${RADARR_PORT}:7878
    environment:
      PUID: ${UID}
      PGID: ${GUID}
      TZ: ${TZ}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)'
      - 'traefik.docker.network=traefik_proxy'
    networks:
      - traefik_proxy
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    depends_on:
      - sabnzbd
      - hydra2
    volumes:
      - "${CONFIG_VOLUME}/sonarr:/config"
      - "${DOWNLOAD_VOLUME}/complete:/downloads"
      - "${MEDIA_VOLUME}/tv:/tv"
    ports:
      - ${SONARR_PORT}:8989
    environment:
      PUID: ${UID}
      PGID: ${GUID}
      TZ: ${TZ}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)'
      - 'traefik.http.services.sonarr.loadbalancer.server.port=8989'
      - 'traefik.docker.network=traefik_proxy'
    networks:
      - traefik_proxy
    restart: unless-stopped

  # lidarr:
  #   image: linuxserver/lidarr
  #   container_name: lidarr
  #   depends_on:
  #     - sabnzbd
  #     - hydra2
  #   volumes:
  #     - "${CONFIG_VOLUME}/lidarr:/config"
  #     - "${DOWNLOAD_VOLUME}/complete:/downloads"
  #     - "${MEDIA_VOLUME}/tv:/tv"
  #   ports:
  #     - ${LIDARR_PORT}:8686      
  #   environment:
  #     PUID: ${UID}
  #     PGID: ${GUID}
  #     TZ: ${TZ}
  #   labels:
  #     - 'traefik.enable=true'
  #     - 'traefik.http.routers.lidarr.rule=Host(`lidarr.${DOMAIN}`)'
  #     - 'traefik.http.services.lidarr.loadbalancer.server.port=8686'
  #     - 'traefik.docker.network=traefik_proxy'
  #   networks:
  #     - traefik_proxy
  #   restart: unless-stopped

  lazylibrarian:
    image: linuxserver/lazylibrarian
    container_name: lazylibrarian
    depends_on:
      - sabnzbd
      - hydra2   
    volumes: 
      - "${CONFIG_VOLUME}/lazylibrarian/config:/config"
      - "${DOWNLOAD_VOLUME}/complete:/downloads"
      - "${MEDIA_VOLUME}/books:/books"
    ports:
      - ${LAZYLIBRARIAN_PORT}:5299      
    environment: 
      PUID: ${UID}
      PGID: ${GUID}
      TZ: ${TZ}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.lazylibrarian.rule=Host(`lazylibrarian.${DOMAIN}`)'
      - 'traefik.http.services.lazylibrarian.loadbalancer.server.port=5299'
      - 'traefik.docker.network=traefik_proxy'
    networks:
      - traefik_proxy
    restart: unless-stopped

  # rutorrent:
  #   image: linuxserver/rutorrent
  #   container_name: rutorrent
  #   volumes:
  #     - "${CONFIG_VOLUME}/rtorrent:/config"
  #     - "${DOWNLOAD_VOLUME}:/downloads"
  #   ports:
  #     - ${RUTORRENT_PORT}:80
  #     - 5000:5000
  #     - 51413:51413
  #     - 6881:6881/udp
  #   environment:
  #     PUID: ${UID}
  #     PGID: ${GUID}
  #   networks:
  #     - traefik_proxy
  #   labels:
  #     - 'traefik.enable=true'
  #     - 'traefik.http.routers.rutorrent.rule=Host(`rutorrent.${DOMAIN}`)'
  #     - 'traefik.http.services.rutorrent.loadbalancer.server.port=80'
  #     - 'traefik.docker.network=traefik_proxy'
  #   restart: unless-stopped

  hydra2:
    image: linuxserver/nzbhydra2
    container_name: hydra2
    volumes:
      - "${CONFIG_VOLUME}/hydra2:/config"
      - "${DOWNLOAD_VOLUME}:/downloads"
    ports:
      - ${HYDRA2_PORT}:5076
    environment:
      PUID: ${UID}
      PGID: ${GUID}
      TZ: ${TZ}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.hydra.rule=Host(`hydra.${DOMAIN}`)'
      - 'traefik.http.services.hydra.loadbalancer.server.port=5076'
      - 'traefik.docker.network=traefik_proxy'
    networks:
      - traefik_proxy
    restart: unless-stopped

  # jackett:
  #   image: linuxserver/jackett
  #   container_name: jackett
  #   volumes:
  #     - "${CONFIG_VOLUME}/jackett:/config"
  #     - "${DOWNLOAD_VOLUME}:/downloads"
  #   ports:
  #     - ${JACKETT_PORT}:9117
  #   environment:
  #     PUID: ${UID}
  #     PGID: ${GUID}
  #     TZ: ${TZ}
  #   labels:
  #     - 'traefik.enable=true'
  #     - 'traefik.http.routers.jackett.rule=Host(`jackett.${DOMAIN}`)'
  #     - 'traefik.http.services.jackett.loadbalancer.server.port=9117'
  #     - 'traefik.docker.network=traefik_proxy'
  #   networks:
  #     - traefik_proxy
  #   restart: unless-stopped  

  tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    depends_on:
      - plex    
    volumes: 
      - ${CONFIG_VOLUME}/tautulli/config:/config
      - ${CONFIG_VOLUME}/tautulli/logs:/logs:ro
    ports:
      - ${TAUTULLI_PORT}:8181      
    environment: 
      PUID: ${UID}
      PGID: ${GUID}
      TZ: ${TZ}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.tautulli.rule=Host(`tautulli.${DOMAIN}`)'
      - 'traefik.docker.network=traefik_proxy'
    networks:
      - traefik_proxy
    restart: unless-stopped

#calibre:
#    image: linuxserver/calibre
#    container_name: calibre
#    depends_on:
#      - plex    
#    volumes: 
#      - ${CONFIG_VOLUME}/calibre/config:/config
#    ports:
#      - ${CALIBRE_WEBUI_PORT}:8081      
#      - ${CALIBRE_DESKTOP_PORT}:8080      
#    environment: 
#      PUID: ${UID}
#      PGID: ${GUID}
#      TZ: ${TZ}
#    labels:
#      - 'traefik.enable=true'
#      - 'traefik.http.routers.calibre.rule=Host(`calibre.${DOMAIN}`)'
#      - 'traefik.http.services.calibre.loadbalancer.server.port=8081'
#      - 'traefik.http.services.calibre.loadbalancer.server.port=8088'
#      - 'traefik.docker.network=traefik_proxy'
#    networks:
#      - traefik_proxy
#    restart: unless-stopped


networks:
    traefik_proxy:
      external: true
